{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"t-linter PyCharm Plugin","text":"<p>T-Linter provides syntax highlighting for PEP 750 template strings in PyCharm.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83c\udfa8 Automatic language injection for template strings with type annotations</li> <li>\ud83d\udcdd Support for <code>Annotated[Template, \"language\"]</code> pattern</li> <li>\ud83d\udd24 Type alias support (e.g., <code>type html = Annotated[Template, \"html\"]</code>)</li> <li>\ud83d\udd0d Function parameter type inference</li> <li>\ud83c\udf10 Support for HTML, SQL, JSON, YAML, JavaScript, TypeScript, CSS, and more</li> </ul>"},{"location":"#installation","title":"Installation","text":"<ol> <li>Open PyCharm</li> <li>Go to Settings/Preferences \u2192 Plugins</li> <li>Search for \"T-Linter\"</li> <li>Click Install</li> </ol>"},{"location":"#usage","title":"Usage","text":""},{"location":"#basic-example","title":"Basic Example","text":"<pre><code>from typing import Annotated\nfrom string.templatelib import Template\n\n# Automatic HTML syntax highlighting\ndef render_page(content: Annotated[Template, \"html\"]) -&gt; str:\n    return content.render()\n\npage = t\"\"\"\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;h1&gt;{title}&lt;/h1&gt;\n        &lt;p&gt;{content}&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\"\"\"\n\n# SQL highlighting\nquery: Annotated[Template, \"sql\"] = t\"SELECT * FROM users WHERE id = {user_id}\"\n</code></pre>"},{"location":"#type-alias-support","title":"Type Alias Support","text":"<pre><code># Define reusable type aliases\ntype html = Annotated[Template, \"html\"]\ntype sql = Annotated[Template, \"sql\"]\n\n# Use with automatic language detection\ncontent: html = t\"&lt;div&gt;{message}&lt;/div&gt;\"\ndb_query: sql = t\"UPDATE users SET name = {name} WHERE id = {id}\"\n</code></pre>"},{"location":"#function-parameter-inference","title":"Function Parameter Inference","text":"<pre><code>def execute_query(query: sql) -&gt; list:\n    return db.execute(query)\n\n# Language inferred from function parameter type\nexecute_query(t\"SELECT * FROM products WHERE price &lt; {max_price}\")\n</code></pre>"},{"location":"#supported-languages","title":"Supported Languages","text":"Language Annotation HTML <code>\"html\"</code> XML <code>\"xml\"</code> SQL <code>\"sql\"</code> JSON <code>\"json\"</code> YAML <code>\"yaml\"</code> JavaScript <code>\"javascript\"</code> or <code>\"js\"</code> TypeScript <code>\"typescript\"</code> or <code>\"ts\"</code> CSS <code>\"css\"</code> Markdown <code>\"markdown\"</code> or <code>\"md\"</code>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>PyCharm 2025.2 or later</li> <li>Python 3.12 or later (for PEP 750 support)</li> </ul>"},{"location":"#license","title":"License","text":"<p>This plugin is licensed under the MIT License.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#unreleased","title":"[Unreleased]","text":""}]}